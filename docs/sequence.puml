@startuml component
title Digdirator Sequence Flow
skinparam maxMessageSize 300
autonumber

actor developer as "Developer"
control digdirator as "Digdirator"

box "Cluster resources"
participant DigdirClient
participant Secret
participant Application
end box

participant digdir as "DigDir"
actor enduser as "End User"
participant External as "External Application"

==On create / update==
developer -> DigdirClient: Apply config

loop forever
	digdirator -> DigdirClient: watch for updates
end

digdirator -> digdir: check if client exists
digdirator -> digdir: register / update client
digdirator -> digdirator: generate new set of JWK

group client do not exists in ID-Porten
digdirator -> digdir: register JWKS (new JWK)
end

group client already exists in ID-Porten
    digdirator -> Secret: fetch existing JWK
    digdirator -> digdir: register JWKS (new and existing JWK)
end

digdirator -> DigdirClient: exposed scopes enabled
digdirator -> digdir: check if scope exists

group scope do not exists in Maskinporten
digdirator -> digdir: register scope
digdirator -> digdir: add consumer(s)
end

group scope already exists in Maskinporten
    digdirator -> digdir: update scope metadata
    digdirator -> digdir: update / add consumer(s)
end

digdirator -> DigdirClient: update status subresource
digdirator -> Secret: inject JWK and metadata

== Usage IDporten ==

Secret -> Application: mount
enduser -> Application: log in
Application -> digdir: start OIDC auth code flow
Application -> enduser: redirect to DigDir
enduser -> digdir: authenticates
digdir -> Application: auth code
Application -> digdir: signed JWT, auth code, state
digdir -> Application: id_token, access_token, (refresh_token)
Application -> enduser: signed in

== Usage Maskinporten ==

Secret -> Application: mount
Application -> Application: start create and sign JWT
Application -> digdir: signed JWT
digdir -> Application: access_token
Application -> External: request data with access_token
External -> digdir: check signature
External -> External: authenticate and authorize
External -> Application: data

==On deletion==
    developer -> DigdirClient: delete
    digdirator -> Secret: delete
    digdirator -> digdir: delete

@enduml
